name: glibc-apk
on:
  push:
    branches:
      - master

env:
  GLIBC_VER: '2.31'
  PREFIX_DIR: '/usr/glibc-compat'
  PUBLIC_KEY: |-
    -----BEGIN PUBLIC KEY-----
    MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAtoHpLA+EKg0M8z8Uh/kq
    o9mzMiuh6rYhmEKFbjSWYoU5LFrzKZOlzpC0nT04qyuK6/00+SjQ1xXa648+gZPw
    aVwxwavf59yVycKeDidfzB8pvEbYoASDmZT8Deh+HvqmIh/EGWZnZjTemQMf9qA5
    unj3n3AXat3yDBg6XBnBd4BxO8iRY0614zcjjbDBbTEm7ywGj6j2Y+Wy7kbIoPK5
    xZkB/jGsc2iY6zGQPsHSWBgYGn2QVghEiDnyy60+etWtUlzpP+iqi2yhxbPQNW1i
    KdxONz5d3Rt6MkD+ttpx1ei5X+jEacMMWLyEnpCi0XCoJCtv4WQEJ67iKjHOPD5n
    VwIDAQAB
    -----END PUBLIC KEY-----

jobs:
  glibc-build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    container:
      image: ubuntu:latest
      env:
        DEBIAN_FRONTEND: 'noninteractive'
    steps:
      - name: clone
        uses: actions/checkout@master
      - name: update container
        run: apt-get update
      - name: install packages
        run: apt-get -y install build-essential wget gawk bison python3 gettext texinfo
      - name: start build
        run: |
          chmod 755 build.sh
          ./build.sh
      - name: upload artifact
        uses: actions/upload-artifact@master
        with:
          name: glibc-bin-${{ env.GLIBC_VER }}
          path: ${{ github.workspace }}/glibc-bin-${{ env.GLIBC_VER }}.tar.gz
  apk-build:
    needs: glibc-build
    runs-on: ubuntu-latest
    steps:
      - name: clone
        uses: actions/checkout@master
      - name: download artifact
        uses: actions/download-artifact@master
        with:
          name: glibc-bin-${{ env.GLIBC_VER }}
      - name: sed PREFIX_DIR
        run: |
          sed -i 's|<PREFIX_DIR>|${{ env.PREFIX_DIR }}|g' ${{ github.workspace }}/glibc-bin.trigger
          sed -i 's|<PREFIX_DIR>|${{ env.PREFIX_DIR }}|g' ${{ github.workspace }}/ld.so.conf
          echo -e "\n\nsha512sums=\"$(sha512sum ${{ github.workspace }}/glibc-bin-${{ env.GLIBC_VER }}.tar.gz \
            ${{ github.workspace }}/nsswitch.conf ${{ github.workspace }}/ld.so.conf)\"" \
            | sed 's|${{ github.workspace }}/||' >> ${{ github.workspace }}/APKBUILD
      - name: start build
        uses: triptixx/action-alpine-abuild@master
        with:
          name_key: glibc-apk
          private_key: ${{ secrets.private_key }}
          public_key: ${{ env.PUBLIC_KEY }}
          packager: 'Loxoo Labs <triptixx@loxoolabs.net>'
      - name: upload artifact
        uses: actions/upload-artifact@master
        with:
          name: glibc-apk-${{ env.GLIBC_VER }}
          path: ${{ github.workspace }}/packages/glibc-apk/x86_64
  apk-test:
    needs: apk-build
    runs-on: ubuntu-latest
    container:
      image: alpine:latest
    steps:
      - name: download artifact
        uses: actions/download-artifact@master
        with:
          name: glibc-apk-${{ env.GLIBC_VER }}
      - name: Test package installation
        run: |
          echo "${{ env.PUBLIC_KEY }}" > /etc/apk/keys/glibc-apk.rsa.pub
          apk add --no-cache *.apk
  apk-assets:
    needs: apk-test
    runs-on: ubuntu-latest
    steps:
      - name: clone
        uses: actions/checkout@master
      - name: download artifact
        uses: actions/download-artifact@master
        with:
          name: glibc-apk-${{ env.GLIBC_VER }}
      - name: Upload Release Asset
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -x
          assets=()
          for asset in ./*.{apk,tar.gz}; do
            assets+=("-a" "$asset")
          done
          if hub release show "v${{ env.GLIBC_VER }}" >/dev/null 2>&1; then
            hub release delete "v${{ env.GLIBC_VER }}"
          fi
          hub release create "${assets[@]}" -m "Release v${{ env.GLIBC_VER }}" v"${{ env.GLIBC_VER }}"